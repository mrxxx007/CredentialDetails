package CredentialDetails.forms;


import CredentialDetails.app.ActionCommand;
import CredentialDetails.app.Application;
import CredentialDetails.controller.FileOperationController;
import CredentialDetails.controller.SectionsListSelectionListener;
import CredentialDetails.data.ApplicationModel;
import CredentialDetails.view.MainFormRender;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;

/**
 * Created by Admin on 03.07.2016.
 */
public class MainForm extends JFrame {

    private ApplicationModel model;

    private JPanel mainPanel;
    private JTable mainTable;
    private JList sectionsList;
    private JButton addRowButton;
    private JButton deleteRowButton;
    private JButton searchButton;
    private JButton loadButton;
    private JButton saveButton;
    private JScrollPane sectionsScrollPane;
    private JScrollPane credentialsScrollPane;
    private JSplitPane mainSplitPane;

    /**
     * Constructor
     */
    public MainForm() {
        model = new ApplicationModel(new MainFormRender(this));

        FileOperationController fileOperationController = new FileOperationController();
        loadButton.setActionCommand(ActionCommand.OPEN_FILE.name());
        loadButton.addActionListener(fileOperationController);
        saveButton.setActionCommand(ActionCommand.SAVE_FILE.name());
        saveButton.addActionListener(fileOperationController);

        sectionsList.addListSelectionListener(new SectionsListSelectionListener());
    }

    // Components' getters

    public ApplicationModel getModel() {
        return model;
    }

    public JList getSectionsList() {
        return sectionsList;
    }

    public JTable getMainTable() {
        return mainTable;
    }

    public JButton getLoadButton() {
        return loadButton;
    }

    public JButton getSaveButton() {
        return saveButton;
    }

    public JScrollPane getSectionsScrollPane() {
        return sectionsScrollPane;
    }

    public JSplitPane getMainSplitPane() {
        return mainSplitPane;
    }

    /**
     * Application starting point
     *
     * @param args arguments
     */
    public static void main(String[] args) {
        Application.getInstance().run();
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5), null));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.add(panel1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        mainSplitPane = new JSplitPane();
        mainSplitPane.setContinuousLayout(true);
        mainSplitPane.setDividerLocation(100);
        panel1.add(mainSplitPane, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(700, 300), null, 0, false));
        mainSplitPane.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        credentialsScrollPane = new JScrollPane();
        mainSplitPane.setRightComponent(credentialsScrollPane);
        credentialsScrollPane.setBorder(BorderFactory.createTitledBorder(null, "Credentials data", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.ABOVE_TOP));
        mainTable = new JTable();
        credentialsScrollPane.setViewportView(mainTable);
        sectionsScrollPane = new JScrollPane();
        mainSplitPane.setLeftComponent(sectionsScrollPane);
        sectionsScrollPane.setBorder(BorderFactory.createTitledBorder(null, "Sections", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.ABOVE_TOP));
        sectionsList = new JList();
        sectionsList.setDropMode(DropMode.USE_SELECTION);
        sectionsList.setLayoutOrientation(0);
        final DefaultListModel defaultListModel1 = new DefaultListModel();
        defaultListModel1.addElement("123");
        defaultListModel1.addElement("345");
        sectionsList.setModel(defaultListModel1);
        sectionsList.setSelectionMode(0);
        sectionsList.putClientProperty("List.isFileList", Boolean.FALSE);
        sectionsScrollPane.setViewportView(sectionsList);
        final JToolBar toolBar1 = new JToolBar();
        toolBar1.setFloatable(false);
        mainPanel.add(toolBar1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(-1, 20), null, 0, false));
        loadButton = new JButton();
        loadButton.setText("Load");
        toolBar1.add(loadButton);
        saveButton = new JButton();
        saveButton.setText("Save");
        toolBar1.add(saveButton);
        final JToolBar.Separator toolBar$Separator1 = new JToolBar.Separator();
        toolBar1.add(toolBar$Separator1);
        addRowButton = new JButton();
        addRowButton.setHideActionText(false);
        addRowButton.setHorizontalAlignment(0);
        addRowButton.setIcon(new ImageIcon(getClass().getResource("/images/add-icon.png")));
        addRowButton.setText("Add row");
        toolBar1.add(addRowButton);
        deleteRowButton = new JButton();
        deleteRowButton.setIcon(new ImageIcon(getClass().getResource("/images/delete-icon.png")));
        deleteRowButton.setText("Delete row");
        toolBar1.add(deleteRowButton);
        searchButton = new JButton();
        searchButton.setIcon(new ImageIcon(getClass().getResource("/images/search-icon.png")));
        searchButton.setText("Search");
        toolBar1.add(searchButton);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
